{"ast":null,"code":"import _objectSpread from\"C:/Users/pc/git/unifrontendweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/pc/git/unifrontendweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* eslint-disable react-hooks/exhaustive-deps */ /* eslint-disable no-unused-vars */import React,{useEffect}from\"react\";import{useFormAdmin,Form}from\"../../../components/useFormAdmin\";import{Grid}from'@material-ui/core';import Controls from\"../../../components/controls/Controls\";import*as adminService from\"../../../services/adminService\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialeValues={logistic_type:'',partner:'',agent:'',staff:''};export default function TransferForm(props){var addOrEdit=props.addOrEdit,recordForEdit=props.recordForEdit;var _useState=useState(adminService.getCurrentUser()),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var validate=function validate(){var fieldValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:values;var temp=_objectSpread({},errors);if('logistic_type'in fieldValues)temp.logistic_type=fieldValues.logistic_type?\"\":\"This field is required.\";if('partner'in fieldValues)temp.partner=fieldValues.partner?\"\":\"This field is required.\";if('agent'in fieldValues)temp.agent=fieldValues.agent?\"\":\"This field is required.\";if('staff'in fieldValues)temp.staff=fieldValues.staff?\"\":\"This field is required.\";setErrors(_objectSpread({},temp));if(fieldValues===values)return Object.values(temp).every(function(x){return x===\"\";});};var handleSubmit=function handleSubmit(e){e.preventDefault();if(validate()){addOrEdit(values,resetForm);}};var _useFormAdmin=useFormAdmin(initialeValues,true,validate),values=_useFormAdmin.values,setValues=_useFormAdmin.setValues,errors=_useFormAdmin.errors,setErrors=_useFormAdmin.setErrors,handleInputChange=_useFormAdmin.handleInputChange,resetForm=_useFormAdmin.resetForm;useEffect(function(){if(recordForEdit!==null)setValues(_objectSpread({},recordForEdit));},[recordForEdit]);return/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Controls.Input,{name:\"logistic_type\",label:\"Select Logistic type\",value:values.logistic_type,onChange:handleInputChange,error:errors.logistic_type}),/*#__PURE__*/_jsx(Controls.Select,{label:\"Select partner\",name:\"partner\",value:values.partner,onChange:handleInputChange,options:adminService.getAutorisation(),error:errors.partner})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Controls.Input,{name:\"agent\",label:\"Select Agent\",value:values.agent,onChange:handleInputChange,error:errors.agent}),/*#__PURE__*/_jsx(Controls.Input,{name:\"staff\",label:\"Select staff\",value:values.staff,onChange:handleInputChange,error:errors.staff}),/*#__PURE__*/_jsx(Controls.Button,{type:\"submit\",text:\"Transfer\"})]})]})});}","map":{"version":3,"names":["React","useEffect","useFormAdmin","Form","Grid","Controls","adminService","useState","initialeValues","logistic_type","partner","agent","staff","TransferForm","props","addOrEdit","recordForEdit","getCurrentUser","currentUser","setCurrentUser","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","handleSubmit","e","preventDefault","resetForm","setValues","handleInputChange","getAutorisation"],"sources":["C:/Users/pc/git/unifrontendweb/src/pages/logistic/transfer/TransferForm.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from \"react\";\r\nimport { useFormAdmin, Form } from \"../../../components/useFormAdmin\";\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport * as adminService from \"../../../services/adminService\";\r\nimport { useState } from \"react\";\r\n\r\nconst initialeValues = {\r\n    logistic_type: '',\r\n    partner:'',\r\n    agent:'',\r\n    staff:'',\r\n\r\n}\r\n\r\nexport default function TransferForm(props) {\r\n    const { addOrEdit, recordForEdit } = props;\r\n    const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\r\n    \r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('logistic_type' in fieldValues)\r\n            temp.logistic_type = fieldValues.logistic_type ? \"\" : \"This field is required.\"\r\n        if ('partner' in fieldValues)\r\n            temp.partner = fieldValues.partner ? \"\" : \"This field is required.\"\r\n        if ('agent' in fieldValues)\r\n            temp.agent = fieldValues.agent ? \"\" : \"This field is required.\"\r\n        if ('staff' in fieldValues)\r\n            temp.staff = fieldValues.staff ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useFormAdmin(initialeValues, true, validate);\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"logistic_type\"\r\n                        label=\"Select Logistic type\"\r\n                        value={values.logistic_type}\r\n                        onChange={handleInputChange}\r\n                        error={errors.logistic_type}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Select partner\"\r\n                        name=\"partner\"\r\n                        value={values.partner}\r\n                        onChange={handleInputChange}\r\n                        options={adminService.getAutorisation()}\r\n                        error={errors.partner}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"agent\"\r\n                        label=\"Select Agent\"\r\n                        value={values.agent}\r\n                        onChange={handleInputChange}\r\n                        error={errors.agent}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"staff\"\r\n                        label=\"Select staff\"\r\n                        value={values.staff}\r\n                        onChange={handleInputChange}\r\n                        error={errors.staff}\r\n                    />\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Transfer\" />\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}