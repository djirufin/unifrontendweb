{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\git\\\\unifrontendweb\\\\src\\\\pages\\\\pmv\\\\Pmv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, useForm } from '../../components/useForm';\nimport * as adminService from \"../../../services/adminService\";\nimport { Grid } from '@material-ui/core';\nimport Controls from '../../components/controls/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  logistic_type: '',\n  partner: '',\n  agent: '',\n  staff: ''\n};\n\nfunction Pmv(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n  const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('logistic_type' in fieldValues) temp.logistic_type = fieldValues.logistic_type ? \"\" : \"This field is required.\";\n    if ('partner' in fieldValues) temp.partner = fieldValues.partner ? \"\" : \"This field is required.\";\n    if ('agent' in fieldValues) temp.agent = fieldValues.agent ? \"\" : \"This field is required.\";\n    if ('staff' in fieldValues) temp.staff = fieldValues.staff ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n  useEffect(() => {\n    if (recordForEdit !== null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"logistic_type\",\n            label: \"Select Logistic type\",\n            value: values.logistic_type,\n            onChange: handleInputChange,\n            error: errors.logistic_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n            label: \"Select partner\",\n            name: \"partner\",\n            value: values.partner,\n            onChange: handleInputChange,\n            options: adminService.getAutorisation(),\n            error: errors.partner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"agent\",\n            label: \"Select Agent\",\n            value: values.agent,\n            onChange: handleInputChange,\n            error: errors.agent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"staff\",\n            label: \"Select staff\",\n            value: values.staff,\n            onChange: handleInputChange,\n            error: errors.staff\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n\n_s(Pmv, \"aGmHEaYLewVP9se+yHLFOd5re+s=\", false, function () {\n  return [useForm];\n});\n\n_c = Pmv;\nexport default Pmv;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pmv\");","map":{"version":3,"names":["React","useEffect","useState","Form","useForm","adminService","Grid","Controls","initialFValues","logistic_type","partner","agent","staff","Pmv","props","addOrEdit","recordForEdit","currentUser","setCurrentUser","getCurrentUser","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","handleSubmit","e","preventDefault","resetForm","setValues","handleInputChange","getAutorisation"],"sources":["C:/Users/pc/git/unifrontendweb/src/pages/pmv/Pmv.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Form, useForm } from '../../components/useForm';\r\nimport * as adminService from \"../../../services/adminService\";\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from '../../components/controls/Controls';\r\n\r\nconst initialFValues = {\r\n    logistic_type: '',\r\n    partner:'',\r\n    agent:'',\r\n    staff:'',\r\n\r\n}\r\n\r\nfunction Pmv(props) {\r\n    const { addOrEdit, recordForEdit } = props;\r\n    const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\r\n    \r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('logistic_type' in fieldValues)\r\n            temp.logistic_type = fieldValues.logistic_type ? \"\" : \"This field is required.\"\r\n        if ('partner' in fieldValues)\r\n            temp.partner = fieldValues.partner ? \"\" : \"This field is required.\"\r\n        if ('agent' in fieldValues)\r\n            temp.agent = fieldValues.agent ? \"\" : \"This field is required.\"\r\n        if ('staff' in fieldValues)\r\n            temp.staff = fieldValues.staff ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <>\r\n           <Form onSubmit={handleSubmit}>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Controls.Input\r\n                            name=\"logistic_type\"\r\n                            label=\"Select Logistic type\"\r\n                            value={values.logistic_type}\r\n                            onChange={handleInputChange}\r\n                            error={errors.logistic_type}\r\n                        />\r\n                        <Controls.Select\r\n                            label=\"Select partner\"\r\n                            name=\"partner\"\r\n                            value={values.partner}\r\n                            onChange={handleInputChange}\r\n                            options={adminService.getAutorisation()}\r\n                            error={errors.partner}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Controls.Input\r\n                            name=\"agent\"\r\n                            label=\"Select Agent\"\r\n                            value={values.agent}\r\n                            onChange={handleInputChange}\r\n                            error={errors.agent}\r\n                        />\r\n                        <Controls.Input\r\n                            name=\"staff\"\r\n                            label=\"Select staff\"\r\n                            value={values.staff}\r\n                            onChange={handleInputChange}\r\n                            error={errors.staff}\r\n                        />\r\n                            <Controls.Button\r\n                                type=\"submit\"\r\n                                text=\"Transfer\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Form> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pmv;"],"mappings":"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"},"metadata":{},"sourceType":"module"}