{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\jeparticipe\\\\src\\\\pages\\\\logistic\\\\Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport * as adminService from \"../../services/adminService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport TransferForm from './TransferForm';\nimport useTableAdmin from '../../components/useTableAdmin';\nimport Header from '../../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    alignItems: 'center'\n  },\n  searchInput: {\n    width: '50%',\n    right: '1rem'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  newButton1: {\n    position: 'absolute',\n    right: '9rem'\n  }\n}));\nconst headCells = [{\n  id: 'eglise',\n  label: 'Eglise Local'\n}, {\n  id: 'cota',\n  label: 'Montant Cotisation'\n}, {\n  id: 'versement',\n  label: 'Versement'\n}, {\n  id: 'dateVersement',\n  label: 'Date'\n}, {\n  id: 'actions',\n  label: 'Action',\n  disableSorting: true\n}];\nexport default function Transfer() {\n  _s();\n\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\n\n  const getAlladmin = () => {\n    (currentUser ? currentUser.roles.toString() === \"ROLE_ZONE\" ? adminService.getAllLocal(currentUser.eglise) : adminService.getAllZone(currentUser.eglise) : adminService.getAllZone(currentUser.eglise)).then(res => {\n      setRecords(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getAlladmin();\n  }, []);\n  const [filterFn, setFilterFn] = useState({\n    fn: records => {\n      return records;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false); // const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\n  // const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTableAdmin(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: records => {\n        if (target.value === \"\") return records;else return records.filter(x => x.eglise.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const addOrEdit = (user, resetForm) => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      user.id ? adminService.updateAdmin(user.id, user) : console.log(user);\n      console.log(user.id);\n    }\n\n    if (!user.id) {\n      adminService.insertAdmin(user);\n      console.log(user);\n      console.log(user.id);\n    } // setNotify({\n    //     isOpen: true,\n    //     message: 'Submit Successfully',\n    //     type: 'success'\n    // })\n\n\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    getAlladmin();\n  };\n\n  const openInPopup = user => {\n    setRecordForEdit(user);\n    setOpenPopup(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(TransferForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Formulaire Eglise\",\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      children: /*#__PURE__*/_jsxDEV(TransferForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Transfer, \"zskb7pUkFvpQ4qLu3LO37pom7NI=\", false, function () {\n  return [useStyles, useTableAdmin];\n});\n\n_c = Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useEffect","useState","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","adminService","Controls","Search","AddIcon","Popup","EditOutlinedIcon","TransferForm","useTableAdmin","Header","useStyles","theme","pageContent","margin","spacing","padding","alignItems","searchInput","width","right","newButton","position","newButton1","headCells","id","label","disableSorting","Transfer","classes","recordForEdit","setRecordForEdit","records","setRecords","currentUser","setCurrentUser","getCurrentUser","getAlladmin","roles","toString","getAllLocal","eglise","getAllZone","then","res","data","filterFn","setFilterFn","fn","openPopup","setOpenPopup","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","toLowerCase","includes","addOrEdit","user","resetForm","updateAdmin","console","log","insertAdmin","openInPopup"],"sources":["C:/Users/pc/Desktop/jeparticipe/src/pages/logistic/Transfer.js"],"sourcesContent":["import React, {useEffect, useState } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport * as adminService from \"../../services/adminService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport TransferForm from './TransferForm';\r\nimport useTableAdmin from '../../components/useTableAdmin';\r\nimport Header from '../../components/Header';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        alignItems: 'center'\r\n    },\r\n    searchInput: {\r\n        width: '50%',\r\n        right: '1rem'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    newButton1: {\r\n        position: 'absolute',\r\n        right: '9rem'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'eglise', label: 'Eglise Local' },\r\n    { id: 'cota', label: 'Montant Cotisation' },\r\n    { id: 'versement', label: 'Versement' },\r\n    { id: 'dateVersement', label: 'Date' },\r\n    { id: 'actions', label: 'Action', disableSorting: true }\r\n]\r\n\r\nexport default function Transfer() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\r\n\r\n    const getAlladmin = () => {\r\n        (currentUser ? (currentUser.roles.toString() === \"ROLE_ZONE\") ? \r\n        (adminService.getAllLocal(currentUser.eglise)) : (adminService.getAllZone(currentUser.eglise)) : (adminService.getAllZone(currentUser.eglise)))\r\n        .then((res) => {\r\n            setRecords(res.data)\r\n        });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAlladmin();\r\n    }, []);\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: records => { return records; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    // const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    // const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTableAdmin(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: records => {\r\n                if (target.value === \"\")\r\n                    return records;\r\n                else\r\n                    return records.filter(x => x.eglise.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (user, resetForm) => {\r\n        // eslint-disable-next-line no-lone-blocks\r\n        {(user.id) ?\r\n            adminService.updateAdmin(user.id, user) :\r\n\r\n            console.log(user)\r\n            console.log(user.id)\r\n        }\r\n        if(!user.id) {\r\n            adminService.insertAdmin(user);\r\n            console.log(user)\r\n            console.log(user.id)\r\n        }\r\n        // setNotify({\r\n        //     isOpen: true,\r\n        //     message: 'Submit Successfully',\r\n        //     type: 'success'\r\n        // })\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        getAlladmin()\r\n    }\r\n\r\n    const openInPopup = user => {\r\n        setRecordForEdit(user)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Header /> */}\r\n            <Paper className={classes.pageContent}>\r\n                <TransferForm />\r\n                {/* <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Recherche\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Ajouter\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar> */}\r\n                {/* <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(user =>\r\n                                (<TableRow key={user.id}>\r\n                                    <TableCell>{user.eglise}</TableCell>\r\n                                    <TableCell>{user.cota}</TableCell>\r\n                                    <TableCell>{user.versement}</TableCell>\r\n                                    <TableCell>{user.creationdate}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(user) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination /> */}\r\n            </Paper>\r\n            <Popup\r\n                title=\"Formulaire Eglise\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <TransferForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            {/* <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}