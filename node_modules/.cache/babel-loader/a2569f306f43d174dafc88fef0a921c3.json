{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\testoryc\\\\src\\\\pages\\\\Associations\\\\Authticate\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport Controls from '../../../components/controls/Controls';\nimport { useFormL, Form } from '../../../components/useFormL';\nimport { CircularProgress } from '@material-ui/core';\nimport * as authService from '../../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  username: '',\n  password: '',\n  loading: false,\n  message: '',\n  checkedB: false\n};\nexport default function Login(props) {\n  _s();\n\n  //const { addOrEdit, recordForEdit } = props\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('username' in fieldValues) temp.username = fieldValues.username ? \"\" : \"This field is required.\";\n    if ('password' in fieldValues) temp.password = fieldValues.password ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      values.loading = true;\n      authService.login(values.username, values.password).then(() => {\n        props.history.push(\"/dashboard\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setValues(values.message = resMessage, values.loading = false);\n      });\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useFormL(initialValues, true, validate); // useEffect(() => {\n  //     if (recordForEdit !== null)\n  //         setValues({\n  //             ...recordForEdit\n  //         })\n  // }, [recordForEdit])\n\n  const gridStyle = {\n    paddingLeft: '170px',\n    margin: '0px'\n  };\n  const img = {\n    position: 'center',\n    padding: '0px',\n    with: '120px',\n    margin: '0rem'\n  };\n  const paperStyle = {\n    padding: '20px',\n    height: '75vh',\n    width: 350,\n    margin: \"50px\"\n  };\n  const btnstyle = {\n    margin: '8px 0'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        style: gridStyle,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: paperStyle,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: img,\n              src: \"logo.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"ENTRAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.textField, {\n            label: \"Usu\\xE1rio\",\n            placeholder: \"Insira usu\\xE1rio\",\n            name: \"username\",\n            fullWidth: true,\n            value: values.username,\n            onChange: handleInputChange,\n            error: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Controls.textField, {\n            label: \"Senha\",\n            placeholder: \"Insira senha\",\n            type: \"password\",\n            name: \"password\",\n            fullWidth: true,\n            value: values.password,\n            onChange: handleInputChange,\n            error: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n            name: \"checkedB\",\n            label: \"Lembre de mim\",\n            checked: values.checkedB,\n            onChange: handleInputChange,\n            value: values.checkedB,\n            ref: c => {\n              values.checkedB = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: btnstyle,\n            children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              text: values.loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 57\n              }, this) : 'ENTRAR',\n              disabled: values.loading,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), values.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: values.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"VusXcJZTOphjFvnMG8SuhisUaMg=\", false, function () {\n  return [useFormL];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","Grid","Paper","Controls","useFormL","Form","CircularProgress","authService","initialValues","username","password","loading","message","checkedB","Login","props","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","handleSubmit","e","preventDefault","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","setValues","handleInputChange","resetForm","gridStyle","paddingLeft","margin","img","position","padding","with","paperStyle","height","width","btnstyle","c"],"sources":["C:/Users/pc/Desktop/testoryc/src/pages/Associations/Authticate/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Grid,Paper } from '@material-ui/core'\r\nimport Controls from '../../../components/controls/Controls';\r\nimport { useFormL, Form } from '../../../components/useFormL';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport * as authService from '../../../services/authService'\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    password: '',\r\n    loading: false,\r\n    message: '',\r\n    checkedB: false\r\n\r\n}\r\n\r\nexport default function Login(props) {\r\n    //const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('username' in fieldValues)\r\n            temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (validate()) {\r\n            values.loading = true\r\n                authService.login(values.username, values.password)\r\n                    .then(() => {\r\n                        props.history.push(\"/dashboard\")\r\n                        window.location.reload();\r\n                    },\r\n                    error => {\r\n                        const resMessage = (error.response && \r\n                            error.response.data && \r\n                            error.response.data.message) || \r\n                            error.message || \r\n                            error.toString();\r\n                            \r\n                        setValues(\r\n                            values.message = resMessage,\r\n                            values.loading = false\r\n                        )\r\n                        \r\n                        \r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useFormL(initialValues, true, validate);\r\n\r\n    // useEffect(() => {\r\n    //     if (recordForEdit !== null)\r\n    //         setValues({\r\n    //             ...recordForEdit\r\n    //         })\r\n    // }, [recordForEdit])\r\n\r\n    const gridStyle = {paddingLeft:'170px', margin:'0px'}\r\n    const img = {position:'center', padding:'0px', with:'120px', margin:'0rem'};\r\n    const paperStyle={padding:'20px', height:'75vh', width:350, margin:\"50px\"}\r\n    const btnstyle={margin:'8px 0'}\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Grid style={gridStyle}>\r\n                    <Paper style={paperStyle}>\r\n                        <Grid align='center'>\r\n                            <img style={img} src='logo.png'/>\r\n                            <h2>ENTRAR</h2>\r\n                        </Grid>\r\n                        <Controls.textField\r\n                            label='Usuário' \r\n                            placeholder='Insira usuário' \r\n                            name='username'\r\n                            fullWidth\r\n                            value={values.username}\r\n                            onChange={handleInputChange}\r\n                            error={errors.username}\r\n                        /><br/><br/>\r\n                        <Controls.textField \r\n                            label='Senha' \r\n                            placeholder='Insira senha'\r\n                            type='password' \r\n                            name='password' \r\n                            fullWidth\r\n                            value={values.password}\r\n                            onChange={handleInputChange}\r\n                            error={errors.password} \r\n                        />\r\n                        <br/><br/>\r\n                        <Controls.Checkbox \r\n                        name='checkedB'\r\n                        label=\"Lembre de mim\"\r\n                        checked={values.checkedB}\r\n                        onChange={handleInputChange}\r\n                        value={values.checkedB}\r\n                        ref={c => {\r\n                            values.checkedB = c;\r\n                        }}\r\n                        /><br/><br/>\r\n                        <div style={btnstyle}>\r\n                            <Controls.Button\r\n                                type='submit' \r\n                                variant=\"contained\" \r\n                                text={values.loading ? (<CircularProgress />) : 'ENTRAR'}\r\n                                disabled={values.loading}\r\n                                fullWidth\r\n                            />\r\n                        </div>\r\n                        {values.message && (\r\n                            <div className='form-group'>\r\n                                <div className='alert alert-danger' role='alert'>\r\n                                    {values.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Paper>\r\n                </Grid>\r\n            </Form>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}