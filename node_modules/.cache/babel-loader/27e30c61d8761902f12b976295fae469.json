{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\git\\\\unifrontendweb\\\\src\\\\pages\\\\logistic\\\\transfer\\\\TransferForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport { useFormAdmin, Form } from \"../../../components/useFormAdmin\";\nimport { Grid, InputAdornment } from '@material-ui/core';\nimport Controls from \"../../../components/controls/Controls\";\nimport * as adminService from \"../../../services/adminService\";\nimport { useState } from \"react\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialeValues = {\n  logistic_type: '',\n  partner: '',\n  agent: '',\n  staff: '',\n  searchby: ''\n};\n\nconst searchBy = () => [{\n  id: 'waybill',\n  title: 'WayBill'\n}, {\n  id: 'materialName',\n  title: 'Material Name'\n}, {\n  id: 'referenceMaterial',\n  title: 'Reference Material'\n}];\n\nexport default function TransferForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n  const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('logistic_type' in fieldValues) temp.logistic_type = fieldValues.logistic_type ? \"\" : \"This field is required.\";\n    if ('partner' in fieldValues) temp.partner = fieldValues.partner ? \"\" : \"This field is required.\";\n    if ('agent' in fieldValues) temp.agent = fieldValues.agent ? \"\" : \"This field is required.\";\n    if ('staff' in fieldValues) temp.staff = fieldValues.staff ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  const handleSearch = e => {// let target = e.target;\n    // setFilterFn({\n    //     fn: records => {\n    //         if (target.value === \"\")\n    //             return records;\n    //         else\n    //             return records.filter(x => x.eglise.toLowerCase().includes(target.value))\n    //     }\n    // })\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useFormAdmin(initialeValues, true, validate);\n  useEffect(() => {\n    if (recordForEdit !== null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          label: \"Search By\",\n          name: \"searchby\",\n          value: values.waybill,\n          onChange: handleInputChange,\n          items: searchBy()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Search\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 46\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransferForm, \"tPGH827zFF9OjHlkzY4fztkQP6o=\", false, function () {\n  return [useFormAdmin];\n});\n\n_c = TransferForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["React","useEffect","useFormAdmin","Form","Grid","InputAdornment","Controls","adminService","useState","Search","initialeValues","logistic_type","partner","agent","staff","searchby","searchBy","id","title","TransferForm","props","addOrEdit","recordForEdit","currentUser","setCurrentUser","getCurrentUser","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","handleSubmit","e","preventDefault","resetForm","handleSearch","setValues","handleInputChange","waybill","startAdornment"],"sources":["C:/Users/pc/git/unifrontendweb/src/pages/logistic/transfer/TransferForm.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from \"react\";\r\nimport { useFormAdmin, Form } from \"../../../components/useFormAdmin\";\r\nimport { Grid, InputAdornment, } from '@material-ui/core';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport * as adminService from \"../../../services/adminService\";\r\nimport { useState } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nconst initialeValues = {\r\n    logistic_type: '',\r\n    partner:'',\r\n    agent:'',\r\n    staff:'',\r\n    searchby: ''\r\n\r\n}\r\n\r\nconst searchBy = () => ([\r\n    { id: 'waybill', title: 'WayBill' },\r\n    { id: 'materialName', title: 'Material Name' },\r\n    { id: 'referenceMaterial', title: 'Reference Material' }\r\n])\r\n\r\nexport default function TransferForm(props) {\r\n    const { addOrEdit, recordForEdit } = props;\r\n    const [currentUser, setCurrentUser] = useState(adminService.getCurrentUser());\r\n    \r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('logistic_type' in fieldValues)\r\n            temp.logistic_type = fieldValues.logistic_type ? \"\" : \"This field is required.\"\r\n        if ('partner' in fieldValues)\r\n            temp.partner = fieldValues.partner ? \"\" : \"This field is required.\"\r\n        if ('agent' in fieldValues)\r\n            temp.agent = fieldValues.agent ? \"\" : \"This field is required.\"\r\n        if ('staff' in fieldValues)\r\n            temp.staff = fieldValues.staff ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    const handleSearch = e => {\r\n        // let target = e.target;\r\n        // setFilterFn({\r\n        //     fn: records => {\r\n        //         if (target.value === \"\")\r\n        //             return records;\r\n        //         else\r\n        //             return records.filter(x => x.eglise.toLowerCase().includes(target.value))\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useFormAdmin(initialeValues, true, validate);\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                {/* <Grid item xs={6}>\r\n                    <Controls.Select\r\n                        name=\"logistic_type\"\r\n                        label=\"Select Logistic type\"\r\n                        value={values.logistic_type}\r\n                        onChange={handleInputChange}\r\n                        options={adminService.getAutorisation()}\r\n                        error={errors.logistic_type}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Select partner\"\r\n                        name=\"partner\"\r\n                        value={values.partner}\r\n                        onChange={handleInputChange}\r\n                        options={adminService.getAutorisation()}\r\n                        error={errors.partner}\r\n                    />\r\n                </Grid> */}\r\n                <Grid item xs={6}>\r\n                    {/* <Controls.Select\r\n                        name=\"agent\"\r\n                        label=\"Select Agent\"\r\n                        value={values.agent}\r\n                        onChange={handleInputChange}\r\n                        options={adminService.getAutorisation()}\r\n                        error={errors.agent}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"staff\"\r\n                        label=\"Select staff\"\r\n                        value={values.staff}\r\n                        onChange={handleInputChange}\r\n                        options={adminService.getAutorisation()}\r\n                        error={errors.staff}\r\n                    /> */}\r\n                    <Controls.RadioGroup\r\n                        label='Search By'\r\n                        name=\"searchby\"\r\n                        value={values.waybill}\r\n                        onChange={handleInputChange}\r\n                        items={searchBy()}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Search\"\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <div> \r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Transfer\" \r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}