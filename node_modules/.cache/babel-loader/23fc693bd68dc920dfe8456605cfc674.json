{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\jeparticipe\\\\src\\\\pages\\\\Associations\\\\zones\\\\ZoneForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../../components/controls/Controls\";\nimport { FormF, useFormF } from '../../../components/useFormF';\nimport * as feeService from '../../../services/feeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  zone: '',\n  region: '',\n  cota: '',\n  name: '',\n  telephone: '',\n  username: '',\n  password: '',\n  autorisation: ''\n};\nexport default function ZoneForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('zone' in fieldValues) temp.zone = fieldValues.zone ? \"\" : \"This field is required.\";\n    if ('region' in fieldValues) temp.region = fieldValues.region ? \"\" : \"This field is required.\";\n    if ('cota' in fieldValues) temp.cota = fieldValues.cota ? \"\" : \"This field is required.\";\n    if ('name' in fieldValues) temp.name = fieldValues.name ? \"\" : \"This field is required.\";\n    if ('telephone' in fieldValues) temp.telephone = fieldValues.telephone.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('username' in fieldValues) temp.username = fieldValues.username ? \"\" : \"Email is not valid.\";\n    if ('password' in fieldValues) temp.password = fieldValues.password ? \"\" : \"This field is required.\";\n    if ('autorisation' in fieldValues) temp.autorisation = fieldValues.autorisation ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useFormF(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit !== null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(FormF, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"zone\",\n          label: \"Zone\",\n          value: values.eglise,\n          onChange: handleInputChange,\n          error: errors.eglise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Montant Cotisation\",\n          name: \"cota\",\n          value: values.cota,\n          onChange: handleInputChange,\n          error: errors.cota\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Nom & prenom\",\n          name: \"name\",\n          value: values.name,\n          onChange: handleInputChange,\n          error: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"telephone\",\n          label: \"Telephone\",\n          value: values.telephone,\n          onChange: handleInputChange,\n          error: errors.telephone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"username\",\n          label: \"Nom utilisateur\",\n          value: values.username,\n          onChange: handleInputChange,\n          error: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"password\",\n          type: \"password\",\n          label: \"Mot de passe\",\n          value: values.password,\n          onChange: handleInputChange,\n          error: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"region\",\n          label: \"Region\",\n          value: values.region,\n          onChange: handleInputChange,\n          error: errors.region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          label: \"Role\",\n          name: \"autorisation\",\n          value: values.autorisation,\n          onChange: handleInputChange,\n          options: feeService.getAutorisation(),\n          error: errors.autorisation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"VALIDATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            text: \"REDEFINIR\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ZoneForm, \"f3zhLptd9b1JXMd3yTshxapig0E=\", false, function () {\n  return [useFormF];\n});\n\n_c = ZoneForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZoneForm\");","map":{"version":3,"names":["React","useEffect","Grid","Controls","FormF","useFormF","feeService","initialFValues","zone","region","cota","name","telephone","username","password","autorisation","ZoneForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","eglise","getAutorisation"],"sources":["C:/Users/pc/Desktop/jeparticipe/src/pages/Associations/zones/ZoneForm.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../../components/controls/Controls\";\nimport { FormF, useFormF } from '../../../components/useFormF';\nimport * as feeService from '../../../services/feeService'\n\n\nconst initialFValues = {\n    zone:'',\n    region:'',\n    cota:'',\n    name: '',\n    telephone: '',\n    username: '',\n    password: '',\n    autorisation: '',\n}\n\nexport default function ZoneForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('zone' in fieldValues)\n            temp.zone = fieldValues.zone ? \"\" : \"This field is required.\"\n        if ('region' in fieldValues)\n            temp.region = fieldValues.region ? \"\" : \"This field is required.\"\n        if ('cota' in fieldValues)\n            temp.cota = fieldValues.cota ? \"\" : \"This field is required.\"\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\n        if ('telephone' in fieldValues)\n            temp.telephone = fieldValues.telephone.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('username' in fieldValues)\n            temp.username = fieldValues.username ? \"\" : \"Email is not valid.\"\n        if ('password' in fieldValues)\n            temp.password = fieldValues.password ? \"\" : \"This field is required.\"\n        if ('autorisation' in fieldValues)\n            temp.autorisation = fieldValues.autorisation ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useFormF(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit !== null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <FormF onSubmit={handleSubmit}>\n            <Grid container>\n            <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"zone\"\n                        label=\"Zone\"\n                        value={values.eglise}\n                        onChange={handleInputChange}\n                        error={errors.eglise}\n                    />\n                    <Controls.Input\n                        label=\"Montant Cotisation\"\n                        name=\"cota\"\n                        value={values.cota}\n                        onChange={handleInputChange}\n                        error={errors.cota}\n                    />\n                    <Controls.Input\n                        label=\"Nom & prenom\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleInputChange}\n                        error={errors.name}\n                    />\n                    <Controls.Input\n                        name=\"telephone\"\n                        label=\"Telephone\"\n                        value={values.telephone}\n                        onChange={handleInputChange}\n                        error={errors.telephone}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"username\"\n                        label=\"Nom utilisateur\"\n                        value={values.username}\n                        onChange={handleInputChange}\n                        error={errors.username}\n                    />\n                    <Controls.Input\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Mot de passe\"\n                        value={values.password}\n                        onChange={handleInputChange}\n                        error={errors.password}\n                    />\n                    <Controls.Input\n                        name=\"region\"\n                        label=\"Region\"\n                        value={values.region}\n                        onChange={handleInputChange}\n                        error={errors.region}\n                    />\n                    <Controls.Select\n                        label=\"Role\"\n                        name=\"autorisation\"\n                        value={values.autorisation}\n                        onChange={handleInputChange}\n                        options={feeService.getAutorisation()}\n                        error={errors.autorisation}\n                    />\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"VALIDATION\" />\n                        <Controls.Button\n                            text=\"REDEFINIR\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </FormF>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}