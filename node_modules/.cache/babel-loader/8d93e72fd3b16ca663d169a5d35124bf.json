{"ast":null,"code":"import axios from \"axios\";\nconst KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId'\n};\nconst ASSOCIATION_API_BASE_URL = \"http://localhost:8080/association\";\nconst headers = {\n  'Content-Type': 'application/json'\n};\nexport const getDepartmentCollection = () => [{\n  id: '1',\n  title: 'Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'Accounting'\n}, {\n  id: '4',\n  title: 'HR'\n}];\nexport function insertEmployee(data) {\n  return axios.post(ASSOCIATION_API_BASE_URL, data);\n}\nexport function updateEmployee(data) {\n  let employees = getAllEmployees();\n  let recordIndex = employees.findIndex(x => x.id === data.id);\n  employees[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function deleteEmployee(id) {\n  let employees = getAllEmployees();\n  employees = employees.filter(x => x.id !== id);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function generateEmployeeId() {\n  if (localStorage.getItem(KEYS.employeeId) === null) localStorage.setItem(KEYS.employeeId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n}\nexport function getAllEmployees() {\n  if (localStorage.getItem(KEYS.employees) === null) localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  let employees = JSON.parse(localStorage.getItem(KEYS.employees)); //map departmentID to department title\n\n  let departments = getDepartmentCollection();\n  return employees.map(x => ({ ...x,\n    department: departments[x.departmentId - 1].title\n  }));\n}","map":{"version":3,"names":["axios","KEYS","employees","employeeId","ASSOCIATION_API_BASE_URL","headers","getDepartmentCollection","id","title","insertEmployee","data","post","updateEmployee","getAllEmployees","recordIndex","findIndex","x","localStorage","setItem","JSON","stringify","deleteEmployee","filter","generateEmployeeId","getItem","parseInt","toString","parse","departments","map","department","departmentId"],"sources":["C:/Users/HP/Desktop/testoryc/src/services/employeeService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nconst ASSOCIATION_API_BASE_URL = \"http://localhost:8080/association\";\nconst headers = {\n    'Content-Type': 'application/json'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\n\nexport function insertEmployee(data) {\n    return axios.post(ASSOCIATION_API_BASE_URL, data)\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id === data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function deleteEmployee(id) {\n    let employees = getAllEmployees();\n    employees = employees.filter(x => x.id !== id)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) === null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) === null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1].title\n    }))\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG;EACTC,SAAS,EAAE,WADF;EAETC,UAAU,EAAE;AAFH,CAAb;AAKA,MAAMC,wBAAwB,GAAG,mCAAjC;AACA,MAAMC,OAAO,GAAG;EACZ,gBAAgB;AADJ,CAAhB;AAIA,OAAO,MAAMC,uBAAuB,GAAG,MAAO,CAC1C;EAAEC,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE;AAAlB,CAD0C,EAE1C;EAAED,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE;AAAlB,CAF0C,EAG1C;EAAED,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE;AAAlB,CAH0C,EAI1C;EAAED,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE;AAAlB,CAJ0C,CAAvC;AAOP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;EACjC,OAAOV,KAAK,CAACW,IAAN,CAAWP,wBAAX,EAAqCM,IAArC,CAAP;AACH;AAED,OAAO,SAASE,cAAT,CAAwBF,IAAxB,EAA8B;EACjC,IAAIR,SAAS,GAAGW,eAAe,EAA/B;EACA,IAAIC,WAAW,GAAGZ,SAAS,CAACa,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASG,IAAI,CAACH,EAAvC,CAAlB;EACAL,SAAS,CAACY,WAAD,CAAT,GAAyB,EAAE,GAAGJ;EAAL,CAAzB;EACAO,YAAY,CAACC,OAAb,CAAqBjB,IAAI,CAACC,SAA1B,EAAqCiB,IAAI,CAACC,SAAL,CAAelB,SAAf,CAArC;AACH;AAED,OAAO,SAASmB,cAAT,CAAwBd,EAAxB,EAA4B;EAC/B,IAAIL,SAAS,GAAGW,eAAe,EAA/B;EACAX,SAAS,GAAGA,SAAS,CAACoB,MAAV,CAAiBN,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAA/B,CAAZ;EACAU,YAAY,CAACC,OAAb,CAAqBjB,IAAI,CAACC,SAA1B,EAAqCiB,IAAI,CAACC,SAAL,CAAelB,SAAf,CAArC;AACH;AAED,OAAO,SAASqB,kBAAT,GAA8B;EACjC,IAAIN,YAAY,CAACO,OAAb,CAAqBvB,IAAI,CAACE,UAA1B,MAA0C,IAA9C,EACIc,YAAY,CAACC,OAAb,CAAqBjB,IAAI,CAACE,UAA1B,EAAsC,GAAtC;EACJ,IAAII,EAAE,GAAGkB,QAAQ,CAACR,YAAY,CAACO,OAAb,CAAqBvB,IAAI,CAACE,UAA1B,CAAD,CAAjB;EACAc,YAAY,CAACC,OAAb,CAAqBjB,IAAI,CAACE,UAA1B,EAAsC,CAAC,EAAEI,EAAH,EAAOmB,QAAP,EAAtC;EACA,OAAOnB,EAAP;AACH;AAED,OAAO,SAASM,eAAT,GAA2B;EAC9B,IAAII,YAAY,CAACO,OAAb,CAAqBvB,IAAI,CAACC,SAA1B,MAAyC,IAA7C,EACIe,YAAY,CAACC,OAAb,CAAqBjB,IAAI,CAACC,SAA1B,EAAqCiB,IAAI,CAACC,SAAL,CAAe,EAAf,CAArC;EACJ,IAAIlB,SAAS,GAAGiB,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACO,OAAb,CAAqBvB,IAAI,CAACC,SAA1B,CAAX,CAAhB,CAH8B,CAI9B;;EACA,IAAI0B,WAAW,GAAGtB,uBAAuB,EAAzC;EACA,OAAOJ,SAAS,CAAC2B,GAAV,CAAcb,CAAC,KAAK,EACvB,GAAGA,CADoB;IAEvBc,UAAU,EAAEF,WAAW,CAACZ,CAAC,CAACe,YAAF,GAAiB,CAAlB,CAAX,CAAgCvB;EAFrB,CAAL,CAAf,CAAP;AAIH"},"metadata":{},"sourceType":"module"}